# ARREGLO DE BUGS

1- Si bien nosotros tenemos el parámetro popAcum en el servidor, por algunos casos bordes deberíamos tener turnoPredominante, y algo parecido con "agregoEnTurno" (lo que el TP llama "huboConstruccion").
Para no agregar todo al pobre servidor, dividimos la union en dos partes, turno, popularidad y agregoEnTurno los resuelvo en la llamada de unión del servidor (total lo puedo hacer en O(1), y sigo respetando la complejidad O(|Nombre|)). 
Todo lo pesado en cuanto a complejidad sigue estando en ActualizarPartida. Esto nos permite arreglar varios bugs que tenia nuestro algortimos en algunas uniones, cuando los tests pedian algunos de estos 3 parametros.

2- Algo que no tuvimos en cuenta en el diseño son consideraciones en uniones múltiples, sin que se llame observadores en el medio. Esto se soluciona, mirando si lo que vamos a unir, tiene uniones pendientes y resolviendo primero 
estas uniones pendientes, y luego hacer la union central, sino la info queda desactualizada.

3- Otro caso borde, es cuando se avanza el turno sin efectuar la unión (llamando a algun observador). En nuestro algoritmo original, termina pasando que las construcciones del conflicto, quedan tantos turnos atrasados como turnos 
se hubieran avanzado desde la union sin llamar a ningun observador. La solucion a esto es agregar un parametro al servidor, que lleva cuenta de estos "turnosAcompensar" en las construcciones del conflicto de la union. 
Y pasarselas al unionSC para que compense estos turnos cuando arregle conflicots. 

---------------------------------------------------------------------

# OTROS CAMBIOS EN EL CODIGO

1- Los observadores de la version de la catedra no tocaban la estructura, por lo que estaban marcados con "const". Se confirmo que no pasa nada con que nosotros los saquemos, y de hecho no nos queda otra, porque nuestros observadores 
(partida especialmente), actualiza la estructura

2- Iteraciones sobre mapa y conjunto que en el algoritmo del diseño se hicieron con iteradores, en la implementacion queda mucho mas limpio hacerlo con un for-range, por lo que decidio hacerlo de esta manera

3- La funcion unionSC hacia varias cosas distintas (une el mapa, une las casas, une los comercio, y despues actualiza esto ultimo). Para una mayor modularizacion, se separo esta funcion en varias auxiliares para que se pueda leer 
mas facilmente
